{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/jobylon.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "const state = {\n  jobs: [],\n};\n\nexport const jobylon = async function () {\n  const parentElement = document.querySelector('[jobylon=\"parent\"]');\n  if (!parentElement) return;\n\n  clear();\n  await fetchJobs();\n  const jobs = state.jobs.map((job) => generateMarkup(job));\n  jobs.forEach((job) => parentElement.append(job));\n\n  function clear() {\n    parentElement.innerHTML = '';\n  }\n};\n\nasync function fetchJobs() {\n  try {\n    const req = await fetch(\n      'https://feed.jobylon.com/feeds/30c8a5ca-e587-4158-8608-58050440d986/?format=json'\n    );\n    const data = await req.json();\n\n    const jobs = data.map((job) => {\n      const locationsStr = job.locations\n        .map(({ location }) => {\n          const { city, country } = location;\n          const str = `${city}, ${country}`;\n\n          return str;\n        })\n        .join(' - ');\n\n      return {\n        title: job.title,\n        function: job.function,\n        url: job.urls.ad,\n        locations: locationsStr,\n      };\n    });\n\n    state.jobs = [...jobs];\n    if (!state.jobs) return;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nfunction generateMarkup(job) {\n  const markup = `<div class=\"career-work_job_wrapper\"><div class=\"career-work_job_title\">${job.title}</div><div class=\"career-work_job_divider\"></div><div class=\"career-work_job_location\">${job.locations}</div><div class=\"career-work_job_link-wrapper\"><div class=\"career-work_job-function\"><div class=\"career-work_job_button-icon w-embed\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n  <circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"white\"></circle>\n</svg></div><div class=\"text-color-white\">${job.function}</div></div><a href=\"${job.url}\" target=\"_blank\" class=\"text-size-medium text-weight-xbold\">read more</a></div></div>`;\n\n  const parser = new DOMParser();\n  const html = parser.parseFromString(markup, 'text/html');\n\n  const div = html.querySelector('div');\n\n  return div;\n}\n", "import { jobylon } from './jobylon';\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(() => {\n  jobylon();\n});\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,iCAAsB,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACA7F,MAAM,QAAQ;AAAA,IACZ,MAAM,CAAC;AAAA,EACT;AAEO,MAAM,UAAU,iBAAkB;AACvC,UAAM,gBAAgB,SAAS,cAAc,oBAAoB;AACjE,QAAI,CAAC;AAAe;AAEpB,UAAM;AACN,UAAM,UAAU;AAChB,UAAM,OAAO,MAAM,KAAK,IAAI,CAAC,QAAQ,eAAe,GAAG,CAAC;AACxD,SAAK,QAAQ,CAAC,QAAQ,cAAc,OAAO,GAAG,CAAC;AAE/C,aAAS,QAAQ;AACf,oBAAc,YAAY;AAAA,IAC5B;AAAA,EACF;AAEA,iBAAe,YAAY;AACzB,QAAI;AACF,YAAM,MAAM,MAAM;AAAA,QAChB;AAAA,MACF;AACA,YAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,YAAM,OAAO,KAAK,IAAI,CAAC,QAAQ;AAC7B,cAAM,eAAe,IAAI,UACtB,IAAI,CAAC,EAAE,UAAAA,UAAS,MAAM;AACrB,gBAAM,EAAE,MAAM,QAAQ,IAAIA;AAC1B,gBAAM,MAAM,GAAG,SAAS;AAExB,iBAAO;AAAA,QACT,CAAC,EACA,KAAK,KAAK;AAEb,eAAO;AAAA,UACL,OAAO,IAAI;AAAA,UACX,UAAU,IAAI;AAAA,UACd,KAAK,IAAI,KAAK;AAAA,UACd,WAAW;AAAA,QACb;AAAA,MACF,CAAC;AAED,YAAM,OAAO,CAAC,GAAG,IAAI;AACrB,UAAI,CAAC,MAAM;AAAM;AAAA,IACnB,SAAS,KAAP;AACA,cAAQ,MAAM,GAAG;AAAA,IACnB;AAAA,EACF;AAEA,WAAS,eAAe,KAAK;AAC3B,UAAM,SAAS,2EAA2E,IAAI,+FAA+F,IAAI;AAAA;AAAA,4CAEvJ,IAAI,gCAAgC,IAAI;AAElF,UAAM,SAAS,IAAI,UAAU;AAC7B,UAAM,OAAO,OAAO,gBAAgB,QAAQ,WAAW;AAEvD,UAAM,MAAM,KAAK,cAAc,KAAK;AAEpC,WAAO;AAAA,EACT;;;AC3DA,SAAO,YAAY,CAAC;AACpB,SAAO,QAAQ,KAAK,MAAM;AACxB,YAAQ;AAAA,EACV,CAAC;",
  "names": ["location"]
}
